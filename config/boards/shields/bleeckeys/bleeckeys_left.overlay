#include "bleeckeys.dtsi"
#include <dt-bindings/led/led.h>




&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
    spi0_default: spi0_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 8)>,
			<NRF_PSEL(SPIM_MOSI, 0, 11)>,
			<NRF_PSEL(SPIM_MISO, 1, 4)>;
		};
	};
	
	spi0_sleep: spi0_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 8)>,
			<NRF_PSEL(SPIM_MOSI, 0, 11)>,
			<NRF_PSEL(SPIM_MISO, 1, 4)>;
			low-power-enable;
		};
	};
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <10>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
    };
};
&kscan0 {
    col-gpios = <&pro_micro 18 GPIO_ACTIVE_HIGH>,
                <&pro_micro 15 GPIO_ACTIVE_HIGH>,
                <&pro_micro 14 GPIO_ACTIVE_HIGH>,
                <&pro_micro 16 GPIO_ACTIVE_HIGH>,
                <&pro_micro 10 GPIO_ACTIVE_HIGH>;
};


&pro_micro_spi {
	status = "okay";
	compatible = "nordic,nrf-spim";
	pinctrl-0 = <&spi0_default>;
	pinctrl-1 = <&spi0_sleep>;
	pinctrl-names = "default", "sleep";
	cs-gpios = <&pro_micro 9 GPIO_ACTIVE_LOW>;
	
	glidepoint: glidepoint@0 {
		status = "okay";
		compatible = "cirque,pinnacle";
		reg = <0>;
		spi-max-frequency = <1000000>;
		dr-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH)>;
		
		sensitivity = "4x";
		sleep;
		no-taps;
	};
};

&glidepoint_listener {
    status = "okay";
    device = <&glidepoint>;
};